/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Here are my Adds
// #include "aliasses.dtsi"


#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/pointing.h>

// Uncomment this block if using RGB
&led_strip {
    // chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 // LED comment Block

 // #defines for RGB and Power

#define rgbTG &rgb_ug RGB_TOG
#define rgbHin &rgb_ug RGB_HUI
#define rgbHde &rgb_ug RGB_HUD
#define rgbBin &rgb_ug RGB_BRI
#define rgbBde &rgb_ug RGB_BRD
#define rgbSin &rgb_ug RGB_SAI
#define rgbSde &rgb_ug RGB_SAD
#define rgbE &rgb_ug RGB_EFF
#define rgbColF &rgb_ug RGB_COLOR_HSB(325, 48 20)
#define powTG &ext_power EP_TOG

#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  F   |  P   |  G   |                   |  J   |  L    |  U    |  Z   |   ;   |  BSPC | Minus = ÃŸ
// |  CTRL |  A  |  R  |  S   |  T   |  D   |                   |  H   |  N    |  E    |  I   |   O   |   '   |
// | SHIFT |  Y  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  K   |  M    |  ,    |  .   |   /   | SHIFT |
//               |LGUI | ALT  | CTRL |L1-RET|  SPACE |  | SHiFT |L2-RET| CTRL  | RALT  | RGUI |
    bindings = <
        &kp ESC   &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                          &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp GRAVE
        &kp TAB   &kp Q  &kp W     &kp F    &kp P    &kp G                           &kp J     &kp L     &kp U     &kp Z    &kp SEMI &kp BSPC
        &kp LCTRL &kp A  &kp R     &kp S    &kp T    &kp D                           &kp H     &kp N     &kp E     &kp I    &kp O    &kp SQT
        &kp LSHFT &kp Y  &kp X     &kp C    &kp V    &kp B      &kp LBKT   &kp RBKT  &kp K     &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                         &kp LGUI  &kp LALT &kp LCTRL &lt 1 RET &kp SPACE  &kp LSHFT &lt 2 RET &kp LCTRL &kp RALT  &kp RGUI
    >;

    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
    };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |SOFT_OFF|
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |   F12  |
// |   `   | SAi | HUi | BRi  |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |    ~   |
// | RGBTG | SAd | HUd | BRd  | ColF |PowTG |        |  |       |      |  _    |  +    |  {   |   }   |   "|"  |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans    &trans    &trans    &soft_off
&kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE  &rgbSin          &rgbHin           &rgbBin           &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
&rgbTG     &rgbSde          &rgbHde           &rgbBde           &rgbColF     &powTG     &trans   &trans    &trans    &kp MINUS &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                            &trans            &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                 &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };
        
        extra3 {
            status = "reserved";
        };

        extra4 {
            status = "reserved";
        };
        
        extra5 {
            status = "reserved";
        };

        extra6 {
            status = "reserved";
        };
    };
};
