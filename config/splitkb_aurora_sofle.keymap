/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_de.h"

// Here are my Adds

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/pointing.h>

// Uncomment this block if using RGB
&led_strip {
    // chain-length = <6>;
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

#define BAS 0
#define CUR 1
#define MOS 2
#define BRK 3
#define SYS 4

#define DSK_PR  &kp LG(LC(LEFT)) // Previous desktop.
#define DSK_NX  &kp LG(LC(RIGHT)) // Next     desktop.

/ {
    // Activate SYS layer by pressing CUR and MOS

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <CUR MOS>;
            then-layer = <ADJUST>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC   |  1  |  2  |  3   |  4   |   5   |                   |   6   |  7    |  8    |  9   |   0   |   `   |
// |  ESC   |  Q  |  W  |  F   |  P   |   G   |                   |   J   |  L    |  U    |  Z   |   ö   |  BSPC |
// |MOS-TAB |  A  |  R  |  S   |  T   |   D   |                   |   H   |  N    |  E    |  I   |   O   | MOS-ä |
// | SHIFT  |  Y  |  X  |  C   |  V   |   B   |   "["  |  |  "]"  |   K   |  M    |  ,    |  .   |   /   | SHIFT |
//                |LGUI | ALT  | CTRL |CUR-RET|  SPACE |  | SHiFT |BRK-RET| CTRL  | RALT  | RGUI |
    bindings = <
        &kp ESC     &kp N1 &kp N2    &kp N3   &kp N4    &kp N5                            &kp N6      &kp N7    &kp N8    &kp N9   &kp N0       &kp GRAVE
        &kp ESC     &kp Q  &kp W     &kp F    &kp P     &kp G                             &kp J       &kp L     &kp U     &kp Z    &kp DE_O_UML &kp BSPC
        &lt MOS TAB &kp A  &kp R     &kp S    &kp T     &kp D                             &kp H       &kp N     &kp E     &kp I    &kp O        &lt MOS DE_A_UML
        &kp LSHFT   &kp Y  &kp X     &kp C    &kp V     &kp B        &kp LBKT   &kp RBKT  &kp K       &kp M     &kp COMMA &kp DOT  &kp FSLH     &kp RSHFT
                           &kp LGUI  &kp LALT &kp LCTRL &lt CUR RET  &kp SPACE  &kp LSHFT &lt BRK RET &kp LCTRL &kp RALT  &kp RGUI
    >;

    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
    };


        cursor_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |      |      |      |      |                   |      |       |       |      |       |       |
// |       |     |DskPrv|   ^  |DskNxt| VolUP|                   |      |       |       |      |       |  DEL  |
// |       |     | <-   |   v  |  ->  | VolDN|                   |  F1  |  F2   |  F3   |  F4  |  F5   |  F6   |
// |       |     | CtX  | CtC  | CtV  |      |        |  |       |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
//               |      |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans      &trans      &trans     &trans    &trans     &trans                      &trans    &trans  &trans  &trans  &trans  &trans                       
&trans      &trans      &kp DSK_PR &kp UP    &kp DSK_NX &kp C_VOL_UP                &kp N1    &kp N2  &kp N3  &kp N4  &kp N5  &kp DEL
&trans      &trans      &kp LEFT   &kp DOWN  &kp RIGHT  &kp C_VOL_DN                &kp F1    &kp F2  &kp F3  &kp F4  &kp F5  &kp F6
&trans      &trans      &kp LC(X)  &kp LC(C) &kp LC(V)  &trans     &trans &trans    &kp F7    &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
                        &trans     &trans    &trans     &trans     &trans &trans    &trans    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mouse_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// | trans |Mcl2 |Mup  |Mcl1  |scrlU |      |                   |      |scrlU  |Mcl1   |Mup   |Mcl2   | trans |
// | trans |Mlft |Mdwn |Mrght |scrlD |      |                   |      |scrlD  |Mlft   |Mdwn  |Mrght  | trans |
// | trans |tabL |Mcl3 |tabR  |      |      |   "["  |  |  "]"  |      |       |tabL   |Mcl3  |tabR   | trans |
//               |LGUI | ALT  | CTRL |L1-RET|  SPACE |  | SHiFT |L2-RET| CTRL  | RALT  | RGUI |
    bindings = <
&trans    &trans          &trans         &trans          &trans         &trans                         &trans      &trans         &trans          &trans         &trans          &trans
&trans    &mkp MB2        &mmv MOVE_UP   &mkp MB1        &msc SCRL_UP   &trans                         &trans      &msc SCRL_UP   &mkp MB1        &mmv MOVE_UP   &mkp MB2        &trans
&trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCRL_DOWN &trans                         &trans      &msc SCRL_DOWN &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans
&trans    &kp LC(LS(TAB)) &mkp MB3       &kp LC(TAB)     &trans         &trans    &kp LBKT   &kp RBKT  &trans      &trans         &kp LC(LS(TAB)) &mkp MB3       &kp LC(TAB)     &trans
                          &trans         &trans          &trans         &trans    &trans     &trans    &trans      &trans         &trans          &trans
    >;

    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
    };
        
        bracket_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       | F12 |  F7 |  F8  |  F9  |  &   |                   |  \   |   {   |   <   |  >   |   }   |  DEL  |
// |       | F11 |  F4 |  F5  |  F6  |  ~   |                   |  |   |   #   |   [   |  ]   |  ->   |   ü   |
// |       | F10 |  F1 |  F2  |  F3  |  $   |        |  |       |  /   |   @   |   (   |  )   |   +   |   *   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &trans  &trans &trans &trans &trans                           &trans      &trans      &trans      &trans      &trans      &trans
&trans    &kp F12 &kp F7 &kp F8 &kp F9 &kp DE_AMPS                      &kp DE_BSLH &kp DE_LBRC &kp DE_LT   &kp DE_GT   &kp DE_RBRC &kp DEL
&trans    &kp F11 &kp F4 &kp F5 &kp F6 &kp DE_TILDE                     &kp DE_PIPE &kp DE_HASH &kp DE_LBKT &kp DE_RBKT &kp RIGHT   &kp DE_U_UML
&trans    &kp F10 &kp F1 &kp F2 &kp F3 &kp DE_DLLR   &trans   &trans    &kp DE_FSLH &kp DE_AT   &kp DE_LPAR &kp DE_RPAR &kp DE_PLUS &kp DE_STAR
                  &trans &trans &trans &trans        &trans   &trans    &trans      &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        system_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |BLEout|USBout |       |      |       |SOFT_OFF|
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |   F12  |
// |   `   | SAi | HUi | BRi  |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |    ~   |
// | RGBTG | SAd | HUd | BRd  |      |PowTG |        |  |       |      |  _    |  +    |  {   |   }   |   "|"  |
//               |     |      |      |      |        |  |       |      |       |       | ColF |
            bindings = <
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                          &out OUT_BLE &out OUT_USB &trans    &trans    &trans    &soft_off
&kp F1          &kp F2          &kp F3          &kp F4            &kp F5       &kp F6                                &kp F7       &kp F8       &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE       &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI   &kp DOLLAR   &kp PRCNT                             &kp CARET    &kp AMPS     &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
&rgb_ug RGB_TOG &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD   &trans       &ext_power EP_TOG  &trans   &trans    &trans       &kp MINUS    &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                                &trans          &trans            &trans       &trans             &trans   &trans    &trans       &trans       &trans    &rgb_ug RGB_COLOR_HSB(240, 80, 10)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra2 {
            status = "reserved";
        };
        
        extra3 {
            status = "reserved";
        };
    };
};
